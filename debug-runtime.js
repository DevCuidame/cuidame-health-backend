const http = require('http');

console.log('üîç VERIFICANDO RUTAS EN TIEMPO DE EJECUCI√ìN\n');

// Hacer una petici√≥n especial para ver qu√© rutas est√°n registradas
function checkRegisteredRoutes() {
  console.log('1Ô∏è‚É£ Verificando rutas registradas...');
  
  // Primero vamos a hacer una petici√≥n que nos d√© informaci√≥n de debug
  const debugRequest = {
    hostname: 'localhost',
    port: 4000,
    path: '/api/debug-routes', // Esta no existe, pero veremos el error
    method: 'GET'
  };
  
  const req = http.request(debugRequest, (res) => {
    let data = '';
    res.on('data', chunk => data += chunk);
    res.on('end', () => {
      console.log(`Status: ${res.statusCode}`);
      console.log(`Response: ${data}\n`);
      
      // Ahora vamos a probar algunas variaciones de las rutas de chat
      testChatRouteVariations();
    });
  });
  
  req.on('error', (err) => {
    console.log(`Error: ${err.message}\n`);
    testChatRouteVariations();
  });
  
  req.end();
}

function testChatRouteVariations() {
  console.log('2Ô∏è‚É£ Probando variaciones de rutas de chat...');
  
  const variations = [
    '/api/chat',
    '/api/chat/',
    '/api/chats',
    '/chat',
    '/chat/',
    '/chats',
    '/api/modules/chat/test',
    '/modules/chat/test'
  ];
  
  let testIndex = 0;
  
  function testNext() {
    if (testIndex >= variations.length) {
      console.log('\n3Ô∏è‚É£ Explorando estructura de la aplicaci√≥n...');
      exploreAppStructure();
      return;
    }
    
    const path = variations[testIndex];
    console.log(`   Probando: ${path}`);
    
    const req = http.request({
      hostname: 'localhost',
      port: 4000,
      path: path,
      method: 'GET'
    }, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        if (res.statusCode !== 404) {
          console.log(`     ‚úÖ ${res.statusCode}: ${data.substring(0, 100)}...`);
        } else {
          console.log(`     ‚ùå 404`);
        }
        testIndex++;
        setTimeout(testNext, 200);
      });
    });
    
    req.on('error', (err) => {
      console.log(`     ‚ùå Error: ${err.message}`);
      testIndex++;
      setTimeout(testNext, 200);
    });
    
    req.end();
  }
  
  testNext();
}

function exploreAppStructure() {
  console.log('Intentando acceder a rutas que sabemos que existen...');
  
  const knownRoutes = [
    '/api/auth',
    '/api/users', 
    '/api/patients',
    '/api/locations',
    '/api'
  ];
  
  let routeIndex = 0;
  
  function testKnownRoute() {
    if (routeIndex >= knownRoutes.length) {
      console.log('\n4Ô∏è‚É£ CONCLUSIONES:');
      analyzeResults();
      return;
    }
    
    const path = knownRoutes[routeIndex];
    console.log(`   Probando ruta conocida: ${path}`);
    
    const req = http.request({
      hostname: 'localhost',
      port: 4000,
      path: path,
      method: 'GET'
    }, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        console.log(`     Status: ${res.statusCode}`);
        if (res.statusCode !== 404) {
          console.log(`     ‚úÖ Esta ruta S√ç est√° registrada`);
        } else {
          console.log(`     ‚ùå Esta ruta NO est√° registrada`);
        }
        routeIndex++;
        setTimeout(testKnownRoute, 200);
      });
    });
    
    req.on('error', (err) => {
      console.log(`     ‚ùå Error: ${err.message}`);
      routeIndex++;
      setTimeout(testKnownRoute, 200);
    });
    
    req.end();
  }
  
  testKnownRoute();
}

function analyzeResults() {
  console.log('\nüìä AN√ÅLISIS DETALLADO:');
  console.log('El problema parece ser que:');
  console.log('1. ‚úÖ El servidor est√° corriendo');
  console.log('2. ‚úÖ Los archivos est√°n compilados correctamente');
  console.log('3. ‚úÖ Las rutas de chat est√°n en el c√≥digo');
  console.log('4. ‚ùå Pero las rutas NO se est√°n registrando en tiempo de ejecuci√≥n');
  console.log('');
  console.log('üîß POSIBLES CAUSAS:');
  console.log('- Error en la importaci√≥n de chatRoutes en routes/index.ts');
  console.log('- Error al compilar routes/index.ts');
  console.log('- Problema con el orden de inicializaci√≥n');
  console.log('- Error en el middleware que est√° interceptando las rutas');
  console.log('');
  console.log('üìù SIGUIENTE PASO:');
  console.log('Necesitamos revisar el archivo compilado routes/index.js en detalle');
}

// Iniciar verificaci√≥n
checkRegisteredRoutes();